<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "boardMapper">


	<resultMap type="Board" id="board_rm">
	
		<id property="boardNo" column="BOARD_NO"/>
		
		
		<result property="boardTitle" column="BOARD_TITLE"/>
      <result property="boardContent" column="BOARD_CONTENT"/>
      <result property="boardCreateDate" column="B_CREATED_AT"/>
      <result property="boardUpdateDate" column="B_REFRESHED_AT"/>
      <result property="viewCount" column="VIEW_COUNT"/>
      <result property="commentCount" column="COMMENT_COUNT"/>
      <result property="memberNickname" column="MEMBER_NICKNAME"/>
      <result property="memberNo" column="MEMBER_NO"/>
      <result property="profileImage" column="PROFILE_IMG"/>
      <result property="thumbnail" column="THUMBNAIL"/>
      
      
      
      <collection property="imageList" javaType="java.util.ArrayList"
      	ofType="BoardImage" select="selectImageList" column="BOARD_NO"/>
      	
      	
      <collection property="commentList"  
      	javaType="java.util.ArrayList" 
      	ofType="Comment" 
      	select="selectCommentList" 
      	column="BOARD_NO" 
      />
	
	</resultMap>

	
	   <!-- BoardImage resultMap -->
   <resultMap type="BoardImage" id="boardImage_rm">
      <id property="imageNo" column="IMG_NO"/>
      <result property="imagePath" column="IMG_PATH"/>
      <result property="imageRename" column="IMG_RENAME"/>
      <result property="imageOriginal" column="IMG_ORIGINAL"/>
      <result property="imageOrder" column="IMG_ORDER"/>
      <result property="boardNo" column="BOARD_NO"/>
   </resultMap> 
	 
	
   <!-- Comment resultMap -->
   <resultMap type="Comment" id="comment_rm">
      <id property="commentNo" column="COMMENT_NO"/>
      <result property="commentContent" column="COMMENT_CONTENT"/>
      <result property="commentCreateDate" column="C_CREATE_DATE"/>
      <result property="boardNo" column="BOARD_NO"/>
      <result property="memberNo" column="MEMBER_NO"/>
      <result property="commentDeleteFlag" column="COMMENT_DEL_FL"/>
      <result property="parentNo" column="PARENT_NO"/>
      <result property="memberNickname" column="MEMBER_NICKNAME"/>
      <result property="profileImage" column="PROFILE_IMG"/>
   </resultMap>
	
	
	<select id="selectBoardType" resultType="map">
		SELECT * FROM BOARD_TYPE
		ORDER BY 1
	</select>

  
  <select id="getListCount" parameterType="_int" resultType="_int">
  	SELECT COUNT(*) FROM BOARD b 
	WHERE BOARD_CODE = #{boardCode}
	AND BOARD_DEL_FL = 'N'
  </select>
  
  <select id="selectBoardList" parameterType="_int" resultMap="board_rm">
  	  SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, VIEW_COUNT, 
		<![CDATA[
		CASE  
      WHEN SYSDATE - B_CREATED_AT < 1/24/60
      THEN FLOOR( (SYSDATE - B_CREATED_AT) * 24 * 60 * 60 ) || '초 전'
      WHEN SYSDATE - B_CREATED_AT < 1/24
      THEN FLOOR( (SYSDATE - B_CREATED_AT) * 24 * 60) || '분 전'
      WHEN SYSDATE - B_CREATED_AT < 1
      THEN FLOOR( (SYSDATE - B_CREATED_AT) * 24) || '시간 전'
      ELSE TO_CHAR(B_CREATED_AT, 'YYYY-MM-DD')
   	END B_CREATED_AT, ]]>
	(SELECT COUNT(*) FROM "COMMENT" C
	WHERE BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
	(SELECT IMG_PATH ||IMG_RENAME FROM BOARD_IMG
	WHERE IMG_ORDER = 0
	AND BOARD_NO = B.BOARD_NO) THUMBNAIL
	FROM BOARD B 
	JOIN MEMBER USING(MEMBER_NO)
	WHERE BOARD_CODE = #{boardCode}
	AND BOARD_DEL_FL = 'N'
	ORDER BY BOARD_NO DESC
  </select>
  
  
  
  <!-- 특정 게시글 상세조회 -->
  <select id="selectBoardDetail" resultMap="board_rm">
  	SELECT BOARD_NO, BOARD_TITLE , BOARD_CONTENT , VIEW_COUNT,
	TO_CHAR(B_CREATED_AT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') B_CREATED_AT,
	TO_CHAR(B_REFRESHED_AT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') B_REFRESHED_AT,
	MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG
	FROM BOARD
	JOIN MEMBER USING(MEMBER_NO)
	WHERE BOARD_DEL_FL ='N'
	AND BOARD_NO = #{boardNo}
  </select>
  
  
  <!-- 특정 게시글의 이미지 목록 조회 -->
    <select id="selectImageList" resultMap="boardImage_rm">
	  	SELECT IMG_NO, BOARD_NO, IMG_PATH, IMG_RENAME, 
	  	IMG_ORIGINAL, IMG_ORDER 
	  	FROM BOARD_IMG
		WHERE BOARD_NO = #{boardNo}
		ORDER BY IMG_ORDER 
  </select>  
  
  <!-- 특정 게시글의 댓글 목록 조회 -->
   <select id="selectCommentList" resultMap="comment_rm">
		SELECT LEVEL, C.* FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT , 
			TO_CHAR(C_CREATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') C_CREATE_DATE,
			BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_NO, COMMENT_DEL_FL
			FROM "COMMENT" 
			JOIN "MEMBER" USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		START WITH PARENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_NO
		ORDER SIBLINGS BY COMMENT_NO
  </select> 
  
  
  
  <!-- 게시글만 삽입 -->
  <insert id="boardWrite" parameterType="Board" useGeneratedKeys="true">
  	
  		<selectKey keyProperty="boardNo" resultType="_int" order="BEFORE">
  			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
  		</selectKey>
  		
  		<!-- 시퀀스를 board에 담아놓은 boardNo로 바꿔줌 -->
  		INSERT INTO "BOARD" VALUES(
  			#{boardNo}, #{boardCode}, #{memberNo}, #{boardTitle}, 
  			#{boardContent}, DEFAULT, DEFAULT, DEFAULT, DEFAULT
  		)
  </insert>
  
  
  <!-- 동적 sql(foreach)
  	
  	- collection : 반복할 객체의 타입(list, set, map, array, ...)
  	- item : collection 객체에서 하나씩 순서대로 꺼낸 요소
  	- index : 현재 인덱스를 나타내는 변수
  	- open : 반복 전 출력할 구문
  	- close : 반복이 끝난 후 출력할 구문
  	- seperator : 분리기호(반복 사이 구분자)
   -->
  <insert id="insertBoardImageList" parameterType="list">
  	INSERT INTO BOARD_IMG
  	SELECT SEQ_IMG_NO.NEXTVAL IMG_NO, A.* FROM
  	
  	<foreach collection="list" item="img" open="(" close=") A"
  	separator="UNION ALL">
  		SELECT 
  		#{img.boardNo} BOARD_NO,
  		#{img.imagePath} IMG_PATH,
  		#{img.imageRename} IMG_RENAME,
  		#{img.imageOriginal} IMG_ORIGINAL,
  		#{img.imageOrder} IMG_ORDER
  		FROM DUAL
  	</foreach>
  </insert>
  
  
  <!-- 나의 문의/안내내역 게시판의 게시글 수 조회 -->
  <select id="getMyQuestionListCount" parameterType="_int" resultType="_int">
  	SELECT COUNT(*) FROM BOARD
  	WHERE BOARD_CODE = 3
  	AND MEMBER_NO = #{memberNo}
  </select>
  
  
  <select id="selectMyQuestionList" parameterType="_int" resultMap="board_rm">
  	SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, VIEW_COUNT, 
		CASE  <![CDATA[
      WHEN SYSDATE - B_CREATED_AT < 1/24/60
      THEN FLOOR( (SYSDATE - B_CREATED_AT) * 24 * 60 * 60 ) || '초 전'
      WHEN SYSDATE - B_CREATED_AT < 1/24
      THEN FLOOR( (SYSDATE - B_CREATED_AT) * 24 * 60) || '분 전'
      WHEN SYSDATE - B_CREATED_AT < 1
      THEN FLOOR( (SYSDATE - B_CREATED_AT) * 24) || '시간 전'
      ELSE TO_CHAR(B_CREATED_AT, 'YYYY-MM-DD')
   	END B_CREATED_AT,  ]]>
	(SELECT COUNT(*) FROM "COMMENT" C
	WHERE BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
	(SELECT IMG_PATH ||IMG_RENAME FROM BOARD_IMG
	WHERE IMG_ORDER = 0
	AND BOARD_NO = B.BOARD_NO) THUMBNAIL
	FROM BOARD B 
	JOIN MEMBER USING(MEMBER_NO)
	WHERE BOARD_CODE = 3
	AND MEMBER_NO = #{memberNo}
	AND BOARD_DEL_FL = 'N'
	ORDER BY BOARD_NO DESC
  </select>
  
  
  <!-- 게시글 상세조회 좋아요 수 증가 -->
  <update id="updateReadCount" parameterType="_int">
  	UPDATE BOARD SET
	VIEW_COUNT  = VIEW_COUNT  + 1
	WHERE BOARD_NO = #{boardNo}
  </update>
  
  
  <!-- 게시글 내용만 수정 -->
 	<update id="boardUpdate" parameterType="Board">
 		UPDATE BOARD SET
 		BOARD_TITLE = #{boardTitle},
 		BOARD_CONTENT = #{boardContent}
 		WHERE BOARD_NO = #{boardNo}
 	</update>
  
  
  
  <!-- 게시글 이미지만 삭제 -->
  <delete id="boardImageDelete">
  	DELETE FROM BOARD_IMG
  	${condition}
  </delete>
  
  
  
  <!-- 게시글 삭제 -->
  <update id="boardDelete">
  	UPDATE BOARD SET
  	BOARD_DEL_FL = 'Y'
  	WHERE BOARD_NO = #{boardNo}
  </update>
  
  
  <!-- 게시글 이미지만 수정 -->
  <update id="boardImageUpdate">
  	UPDATE BOARD_IMG SET
  	IMG_RENAME = #{imageRename},
  	IMG_ORIGINAL = #{imageOriginal}
  	WHERE BOARD_NO = #{boardNo}
  	AND IMG_ORDER = #{imageOrder}
  </update>
  
  
  <!-- 게시글 이미지 수정-새 이미지 삽입 -->
  <insert id="boardImageInsert">
  	INSERT INTO BOARD_IMG VALUES(
  		SEQ_IMG_NO.NEXTVAL, #{boardNo}, #{imagePath}, #{imageRename},
  		#{imageOriginal}, #{imageOrder}
  	)
  </insert>
  <!-- db~서버 비교후 삭제를 위한 이미지 변경명 조회 -->
  <select id="selectImageRenameList" resultType="string">
  	SELECT IMG_RENAME FROM BOARD_IMG
  </select>
  
  
  <!-- 검색조건이 일치하는 전체 게시글 수 -->
  <select id="getListCount_search" resultType="_int">
  	SELECT COUNT(*) FROM BOARD
  	JOIN "MEMBER" USING(MEMBER_NO)
  	WHERE BOARD_CODE  = #{boardCode}
	AND BOARD_DEL_FL = 'N'
	
	<if test='query != NULL and query != ""'>
		<choose>
			<when test='key=="t"'> <!-- 제목 -->
				AND  BOARD_TITLE LIKE '%${query}%'
			</when>
			<when test='key=="c"'> <!-- 내용 -->
				AND  BOARD_CONTENT LIKE '%${query}%'
			</when>
			<when test='key=="tc"'> <!-- 제목+내용 -->
				AND  (BOARD_TITLE LIKE '%${query}%'
				OR BOARD_CONTENT LIKE '%${query}%')
			</when>
			<when test='key=="w"'> <!-- 작성자(w) -->
				AND  MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>
	</if>
  </select>
  
  
  <!-- 검색조건이 일치하는 게시글 리스트  -->
  <select id="selectBoardList_search" parameterType="map" resultMap="board_rm">
  	SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, VIEW_COUNT, 
		CASE  <![CDATA[
      WHEN SYSDATE - B_CREATED_AT < 1/24/60
      THEN FLOOR( (SYSDATE - B_CREATED_AT) * 24 * 60 * 60 ) || '초 전'
      WHEN SYSDATE - B_CREATED_AT < 1/24
      THEN FLOOR( (SYSDATE - B_CREATED_AT) * 24 * 60) || '분 전'
      WHEN SYSDATE - B_CREATED_AT < 1
      THEN FLOOR( (SYSDATE - B_CREATED_AT) * 24) || '시간 전'
      ELSE TO_CHAR(B_CREATED_AT, 'YYYY-MM-DD')
   	END B_CREATED_AT,  ]]>
	(SELECT COUNT(*) FROM "COMMENT" C
	WHERE BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
	(SELECT IMG_PATH ||IMG_RENAME FROM BOARD_IMG
	WHERE IMG_ORDER = 0
	AND BOARD_NO = B.BOARD_NO) THUMBNAIL
	FROM BOARD B 
	JOIN MEMBER USING(MEMBER_NO)
	WHERE BOARD_CODE = #{boardCode}
	AND BOARD_DEL_FL = 'N'
	
	<if test='query != NULL and query != ""'>
		<choose>
			<when test='key=="t"'> <!-- 제목 -->
				AND  BOARD_TITLE LIKE '%${query}%'
			</when>
			<when test='key=="c"'> <!-- 내용 -->
				AND  BOARD_CONTENT LIKE '%${query}%'
			</when>
			<when test='key=="tc"'> <!-- 제목+내용 -->
				AND  (BOARD_TITLE LIKE '%${query}%'
				OR BOARD_CONTENT LIKE '%${query}%')
			</when>
			<when test='key=="w"'> <!-- 작성자(w) -->
				AND  MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>
	</if>
	
	ORDER BY BOARD_NO DESC
  </select>
  
</mapper>
